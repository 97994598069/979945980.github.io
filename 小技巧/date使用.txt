脚本中常用的时间表示：
DATE=$(date +%F)
TIME=$($date +%T)
echo "${DATE} ${TIME} $0 : ${buzhou}" >> "${LOG_FILE}" 

1. date用来显示具体的日期和24进制的时间
[jasmine.qian@ ~]$ date
Fri Jan 25 14:17:17 CST 2019

[jasmine.qian@ ~]$ date '+%Y-%m-%d %H:%M:%S'
2019-01-25 14:17:25


2. 具体的显示昨天，或者一天之后，一天之前
[jasmine.qian@]$ date -d 'yesterday' '+%Y-%m-%d %H:%M:%S'
2019-01-24 14:18:53

[jasmine.qian@]$ date -d '1 days' '+%Y-%m-%d %H:%M:%S'
2019-01-26 14:19:04

[jasmine.qian@]$ date -d '+1 days' '+%Y-%m-%d %H:%M:%S'
2019-01-26 14:19:13

[jasmine.qian@]$ date -d '-1 days' '+%Y-%m-%d %H:%M:%S'
2019-01-24 14:19:21

[jasmine.qian@]$ date -d 'tomorrow' '+%Y-%m-%d %H:%M:%S'
2019-01-26 14:19:30


3. 具体的显示一小时之后，一分钟之前等等
[jasmine.qian@]$ date -d '2 hours' '+%Y-%m-%d %H:%M:%S'
2019-01-25 16:21:33

[jasmine.qian@]$ date -d '-2 hours' '+%Y-%m-%d %H:%M:%S'
2019-01-25 12:21:39

[jasmine.qian@]$ date -d '-2 minutes' '+%Y-%m-%d %H:%M:%S'
2019-01-25 14:19:52

[jasmine.qian@]$ date -d '-2 minute' '+%Y-%m-%d %H:%M:%S'
2019-01-25 14:19:58

[jasmine.qian@]$ date -d '-2 hour 2 minute' '+%Y-%m-%d %H:%M:%S'
2019-01-25 12:24:08


案例：
nginx的时间格式有两种：
$time_iso8601    生成格式：2013-09-25T15:16:35+08:00
$time_local      生成格式： 25/Sep/2013:15:12:13 +0800  默认的

需求：
我想监控上一分钟的nginx日志有没有报错，用crontab来做每分钟的轮询
1.将nginx的日志格式改为$time_iso8601
2.time=$(date -d '-1 minutes' '+%Y-%m-%dT%H:%M')  定义时间变量，淡然不能到秒，若到秒则表示为:date -d '-1 minutes' '+%Y-%m-%dT%H:%M:%S'
然后用grep做筛选

当然最好不要直接筛选，可以结合tail命令以防日志太多浪费资源




















