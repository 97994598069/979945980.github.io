1.java日志
比如jar包运行的日志
cat /etc/logrotate.d/xmt 
/home/wwwroot_release_jar/abc.log { 
rotate 5 
daily 
copytruncate 
#compress 2
#notifempty 
missingok 
dateext
#dateformat -%Y%m%d%s
dateformat -%Y-%m-%d_%H  ##切分出来结果是abc.log-2020-04-16_18 ##18是小时，用于日志生成过快，每4个小时生成一次日志的情况，dateformat选项可不加，默认是abc.log-20200203

} 

[root@localhost ~]# crontab -l  ##若不加，则轮询不执行
00 00 * * * /usr/sbin/logrotate -f /etc/logrotate.d/xmt &>/dev/null

参数说明：
·daily 指定转储周期为每天
·weekly 指定转储周期为每周
·monthly 指定转储周期为每月
·compress 通过 gzip 压缩转储旧的日志
·nocompress 不需要压缩时，用这个参数
·copytruncate 用于还在打开中的日志文件，把当前日志备份并截断，是先拷贝再清空的方式，拷贝和清空之间有一个时间差，可能会丢失部分日志数据。（其实是先cp之后清空原来的日志，适合要求不高、日志量。不能自动生成日志文件的。）
·nocopytruncate 备份日志文件但是不截断（是直接mv改名，不丢失日志但是。不适合不能自动生成日志文件的服务。）
·create mode owner group 使用指定的文件模式创建新的日志文件，如:create 0664 root utmp
·nocreate 不建立新的日志文件
·delaycompress 和 compress 一起使用时，转储的日志文件到下一次转储时才压缩
·nodelaycompress 覆盖 delaycompress 选项，转储同时压缩
·missingok 在日志转储期间,任何错误将被忽略
·errors address 转储时的错误信息发送到指定的 Email 地址
·ifempty 即使日志文件是空文件也转储，这个是 logrotate 的缺省选项
·notifempty 如果日志文件是空文件的话，不转储
·mail E-mail 把转储的日志文件发送到指定的 E-mail 地址
·nomail 转储时不发送日志文件到 E-mail 地址
·olddir directory 转储后的日志文件放入指定的目录，必须和当前日志文件在同一个文件系统
·noolddir 转储后的日志文件和当前日志文件放在同一个目录下
·prerotate/endscript 在转储之前需要执行的命令可以放入这个对中，这两个关键字必须单独成行
·postrotate/endscript 在转储之后需要执行的命令可以放入这个对中，这两个关键字必须单独成行
·sharedscripts 所有的日志文件都转储完毕后统一执行一次脚本
·rotate count 指定日志文件删除之前转储的次数，0 指没有备份，5 指保留5个备份（一般根据日志重要性定义）
·size(minsize) logsize 当日志文件到达指定的大小时才转储，size 可以指定单位为k或M，如:size 500k,size 100M
·dateext 指定转储后的日志文件以当前日期为格式结尾，如
·dateformat dateformat 配合dateext使用，紧跟在下一行出现，定义日期格式，只支持%Y %m %d %s这4个参数，如:dateformat -%Y%m%d%s



nginx日志:
/data/nginx*.log {
daily
dateext
missingok
rotate 15
compress
delaycompress
notifempty
create 755 root root
sharedscripts
postrotate
    if [ -f /usr/local/nginx/logs/nginx.pid ];then
	    kill -USR1 `cat /usr/local/nginx/logs/nginx.pid`
	fi
endscript
}




PHP-FPM日志
vim /etc/logrotate.d/nginx

/usr/local/php/var/log/*.log {
daily
compress
rotate 7
missingok
notifempty
dateext
sharedscripts
postrotate
    if [ -f /usr/local/php/var/run/php-fpm.pid ]; then
        kill -USR2 `cat /usr/local/php/var/run/php-fpm.pid`
    fi
endscript
}


