一.安装tsar工具
1.两种安装方式
git clone git://github.com/kongjian/tsar.git
cd tsar
make  ###记得此处会报警什么的，按照报警make
make install

安装 tsardevel     
make tsardevel   

wget -O tsar.zip https://github.com/alibaba/tsar/archive/master.zip --no-check-certificate
unzip tsar.zip
cd tsar
make
make install


安装nginx需配置:
[root@localhost nginx]# nginx -V
nginx version: nginx/1.16.0
built by gcc 4.8.5 20150623 (Red Hat 4.8.5-36) (GCC) 
built with OpenSSL 1.0.2k-fips  26 Jan 2017
TLS SNI support enabled
configure arguments: --prefix=/usr/local/nginx --with-stream --with-http_stub_status_module --with-http_ssl_module


location /nginx_status {
    stub_status on;
    access_log   off;
}


请确保如下方式能得到数据：
curl 127.0.0.1:80/nginx_status -H 'Host: status.taobao.com'

需要确保nginx配置该location,并且能够访问curl http://localhost/nginx_status得到上面的数据
如果nginx的端口不是80,则需要在配置文件中指定端口,配置文件是/etc/tsar/tsar.conf,修改mod_nginx on为mod_nginx on 8080 。nginx 模块支持多个端口采集，以解决在不同端口启动了nginx的情况，端口号之间以空格隔开即可。
不同端口的nginx数据以不同item的形式展现，在对各item进行合并的时候（-m），除rt以及sslhst依然为平均值之外，其他的所有值都为所有端口的值的总和



##若更改，则需要在模块中指定相应的配置
	


切换到安装目录
[root@localhost tsar-master]# cd /opt/tsar-master
[root@localhost tsar-master]# pwd
/opt/tsar-master

下载nginx安装模块:
https://github.com/taobao/tsar-mod_nginx.git  下载zip包或者直接git clone

因为这个插件有点问题一直没有更新，需要手动更改一下（将配置文件里的register_mod_fileds改为register_mod_fields）

[root@localhost tsar-master]# vi ./tsar-mod_nginx/mod_nginx.c  （倒数第2行）
    188     register_mod_fields(mod, "--nginx", nginx_usage, nginx_info, 9, read_nginx_stats, set_nginx_record);  ###（register_mod_fields这里）
    189 }

修改完成后
[root@localhost tsar-master]# cp tsar-mod_nginx/mod_nginx.c ./nginx/
[root@localhost tsar-master]# cd nginx/
[root@localhost tsar-master]# make	
[root@localhost tsar-master]# make install

重新启动nginx (可能需要一段时间后)
[root@localhost conf]# tsar --nginx -l -i 1 
Time              ----------------------------------nginx--------------------------------- 
Time              accept  handle    reqs  active    read   write    wait     qps      rt   
03/12/19-01:00:36   1.00    1.00    1.00    1.00    0.00    1.00    0.00    1.00    0.00   
03/12/19-01:00:37   1.00    1.00    1.00    1.00    0.00    1.00    0.00    1.00    0.00   
03/12/19-01:00:38   1.00    1.00    1.00    1.00    0.00    1.00    0.00    1.00    0.00   
03/12/19-01:00:39   1.00    1.00    1.00    1.00    0.00    1.00    0.00    1.00    0.00   
03/12/19-01:00:40   1.00    1.00    1.00    1.00    0.00    1.00    0.00    1.00    0.00   
03/12/19-01:00:41   1.00    1.00    1.00    1.00    0.00    1.00    0.00    1.00    0.00   
03/12/19-01:00:42   1.00    1.00    1.00    1.00    0.00    1.00    0.00    1.00    0.00   

accept:总共接收的新连接数目
handle:总共处理的连接数目
reqs:总共产生请求数目
active:活跃的连接数,等于read+write+wait
read:读取请求数据的连接数目
write:向用户写响应数据的连接数目
wait:长连接等待的连接数目
qps:每秒处理的请求数
rt:平均响应时间ms
sslqps:每秒处理的SSL请求数
spdyps:每秒处理的spdy请求数
sslhst:平均ssl握手时间ms




