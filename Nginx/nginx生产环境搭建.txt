Centos7生产环境安装Nginx

安装 Supervisor
提示：supervisor主要用于管理nginx的开机自启动（带守护进程）

安装
yum install -y supervisor

开机自启动
systemctl enable supervisord

启动服务
systemctl start supervisord

查看服务状态
systemctl status supervisord


更改系统的最大打开文件描述符数
查看限制
ulimit -n

临时更改限制（系统重启失效）
ulimit -n 1048576

永久更改最大打开文件描述符数
vim /etc/security/limits.conf
* soft nofile 1048576
* hard nofile 1048576       #星号表示对所有用户生效

第二步
vim /etc/sysctl.conf
fs.file-max = 1048576       #可执行"sysctl -p"使fs.file-max生效

第三步
vim /etc/pam.d/login
session required pam_limits.so       #查看配置文件有没有这行，没有就加上

第四步
reboot       #重启系统

第五步（查看是否生效）
ulimit -n
sysctl fs.file-max
cat /proc/PID/limits       #PID是应用的进程ID，在输出结果中查看"Max open files"的显示值

更改 Supervisor 的最大打开文件描述符数
如果应用使用supervisor来管理，则需要按以下步骤配置，否则上面的配置对使用supervisor管理的应用不生效

修改supervisor的配置文件
vim /etc/supervisord.conf
minfds=1048576

修改supervisor的systemctl启动脚本，添加LimitNOFILE属性
vim /usr/lib/systemd/system/supervisord.service
[Service]
LimitNOFILE=1048576

重启supervisord生效
systemctl damon-reload
systemctl restart supervisord


创建 Nginx 用户和用户组
切换root用户
$ sudo -i

创建nginx用户组
groupadd nginx

创建nginx用户（不允许远程登录）
useradd -g nginx nginx -s /bin/false


下载 Nginx
创建下载目录
mkdir -p /home/nginx/software

下载
cd /home/nginx/software
wget http://nginx.org/download/nginx-1.16.0.tar.gz

解压
tar -xvf nginx-1.16.0.tar.gz


编译安装 Nginx
进入下载目录
cd /home/nginx/software/nginx-1.16.0

安装依赖库
yum install -y gcc gdb strace gcc-c++ autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel curl curl-devel e2fsprogs patch e2fsprogs-devel krb5-devel libidn libidn-devel openldap-devel nss_ldap openldap-clients openldap-servers libevent-devel libevent uuid-devel uuid openssl openssl-devel pcre pcre-devel

配置
./configure \
        --user=nginx \
        --group=nginx \
        --prefix=/usr/local/nginx \
        --with-http_ssl_module \
        --with-http_realip_module \
        --with-http_gzip_static_module \
        --with-http_stub_status_module

编译安装
make && make install

备份默认的配置文件
cd /usr/local/nginx/conf
cp nginx.conf nginx.conf.default

文件授权
chown -R nginx:nginx /usr/local/nginx


配置 Nginx
编辑nginx的配置文件
vim /home/nginx/software/nginx-1.16.0/conf/nginx.conf
worker_processes  4;
error_log  logs/error.log;

校验配置文件是否正确
/usr/local/nginx/sbin/nginx -t


开机自启动 Nginx
创建nginx的supervistor配置文件
touch /etc/supervisord.d/nginx.ini

编辑nginx的supervistor配置文件
vim /etc/supervisord.d/nginx.ini
[program:nginx]
directory=/usr/local/nginx
command=/usr/local/nginx/sbin/nginx -g 'daemon off;' -c /usr/local/nginx/conf/nginx.conf
user=root
numprocs=1
autostart=true
autorestart=true
startretries=10
process_name=%(program_name)s

上面的配置，主进程会以root用户运行，worker进程会以nginx用户运行

重载nginx的supervistor配置文件，会自动启动nginx服务
supervisorctl reload

查看nginx的运行状态
supervisorctl status nginx
nginx RUNNING   pid 9451, uptime 0:00:56     #如果输出此日志信息，说明nginx启动成功，否则查看nginx的启动日志来排查问题

测试访问nginx
curl -I -X GET 127.0.0.1:80


配置防火墙
开放端口
firewall-cmd --zone=public --permanent --add-port=80/tcp

保存防火墙配置
firewall-cmd --reload

查看已开放的端口
firewall-cmd --list-ports


管理 Nginx 服务
关闭
supervistorctl stop nginx

启动
supervistorctl start nginx

重启
supervistorctl restart nginx

查看状态
supervistorctl status nginx

平滑更新nginx的配置文件
/usr/local/nginx/sbin/nginx -s reload


配置概述
安装目录：/usr/local/nginx
配置文件：/usr/local/nginx/conf/nginx.conf
错误日志：/usr/local/nginx/logs/error.log
访问日志：/usr/local/nginx/logs/access.log
nginx的supervistor配置文件：/etc/supervisord.d/nginx.ini


配置文件的优化：

