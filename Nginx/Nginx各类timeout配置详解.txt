nginx访问出现504 Gateway Time-out，一般是由于程序执行时间过长导致响应超时，例如程序需要执行90秒，而nginx默认最大响应等待时间为30秒，这样就会出现超时。通常有以下几种情况导致：
程序在处理大量数据，导致等待超时。
程序中调用外部请求，而外部请求响应超时。
连接数据库失败而没有停止，死循环重新连。
nginx默认的fastcgi进程响应的缓冲区太小，致fastcgi进程被挂起

出现这种情况，我们可以先优化程序，缩短执行时间。另一方面，可以调大nginx超时限制的参数，使程序可以正常执行。


timeout参数

§1. 常规timeout参数
send_timeout
语法：send_timeout time
默认值：60s
配置区域：http server location
说明：设置响应传输到客户端的超时时间。仅在两个连续的写操作之间设置超时，而不是为整个
响应的传输。如果客户端在此时间内未收到任何内容，则会关闭连接。



client_header_timeout
语法：client_header_timeout time
默认值：60s
配置区域：http server
说明：指定等待client发送一个请求头的超时时间（例如：GET / HTTP/1.1）.仅当在一次read中，没有收到请求头，才会算成超时。如果在超时时间内，client没发送任何东西，nginx返回HTTP状态码408(“Request timed out”)



client_body_timeout
语法：client_body_timeout time
默认值：60s
配置区域：http server location
说明：该指令设置请求体（request body）的读超时时间。仅当在一次readstep中，没有得到请求体，就会设为超时。超时后，nginx返回HTTP状态码408(“Request timed out”)


keepalive_timeout
语法：keepalive_timeout timeout [ header_timeout ]
默认值：75s
配置区域：http server location
说明：第一个参数指定了与client的keep-alive连接超时时间。服务器将会在这个时间后关闭连接。可选的第二个参数指定了在响应头Keep-Alive: timeout=time中的time值。这个头能够让一些浏览器主动关闭连接，这样服务器就不必要去关闭连接了。没有这个参数，nginx不会发送Keep-Alive响应头（尽管并不是由这个头来决定连接是否“keep-alive”）

两个参数的值可并不相同
注意不同浏览器怎么处理“keep-alive”头
MSIE和Opera忽略掉"Keep-Alive: timeout=" header.
MSIE保持连接大约60-65秒，然后发送TCP RST
Opera永久保持长连接
Mozilla keeps the connection alive for N plus about 1-10 seconds.
Konqueror保持长连接N秒



lingering_timeout
语法：lingering_timeout time
默认值：5s
配置区域：http server location
说明：lingering_close生效后，在关闭连接前，会检测是否有用户发送的数据到达服务器，如果超过lingering_timeout时间后还没有数据可读，就直接关闭连接；否则，必须在读取完连接缓冲区上的数据并丢弃掉后才会关闭连接。



resolver_timeout
语法：resolver_timeout time
默认值：30s
配置区域：http server location
说明：该指令设置DNS解析超时时间


++++++++++++++++++++++

§2. fastcgi的timeout设置
配置区域：http
fastcgi_connect_timeout
fastcgi连接超时时间，默认60秒
fastcgi_send_timeout
nginx进程向fastcgi进程发送请求过程的超时时间，默认值60秒
fastcgi_read_timeout
fastcgi进程向nginx进程发送输出过程的超时时间，默认值60秒


+++++++++++++++++++++++++++++++++++


§3. proxy转发模块的timeout设置
proxy_connect_timeout
语法：proxy_connect_timeout time
默认值：60s
配置区域：http server location
说明：该指令设置与upstream server的连接超时时间，有必要记住，这个超时不能超过75秒。
这个不是等待后端返回页面的时间，那是由proxy_read_timeout声明的。如果你的upstream服务器起来了，但是hanging住了（例如，没有足够的线程处理请求，所以把你的请求放到请求池里稍后处理），那么这个声明是没有用的，由于与upstream服务器的连接已经建立了。


proxy_read_timeout
语法：proxy_read_timeout time
默认值：60s
配置区域：http server location
说明：该指令设置与代理服务器的读超时时间。它决定了nginx会等待多长时间来获得请求的响应。这个时间不是获得整个response的时间，而是两次reading操作的时间。



proxy_send_timeout
语法：proxy_send_timeout time
默认值：60s
配置区域：http server location
说明：这个指定设置了发送请求给upstream服务器的超时时间。超时设置不是为了整个发送期间，而是在两次write操作期间。如果超时后，upstream没有收到新的数据，nginx会关闭连接


proxy_upstream_fail_timeout（fail_timeout）
语法：server address [fail_timeout=30s]
默认值：10s
配置区域：upstream
说明：Upstream模块下 server指令的参数，设置了某一个upstream后端失败了指定次数（max_fails）后，该后端不可操作的时间，默认为10秒


++++++++++++++++++++++++++++++++++++++++


§4. 负载均衡配置timeout时的2个参数
fail_timeout：默认10s
max_fails：默认1次

这2个参数一起配合，来控制在fail_timeout的时间内nginx怎样认为upstream中的某个server是失效的，某个server连接失败了max_fails次，则nginx会认为该server不工作了。同时，在接下来的 fail_timeout时间内，nginx不再将请求分发给失效的server。如果不设置这2个参数，fail_timeout默认为10s，max_fails默认为1。就是说，只要某个server失效一次，则在接下来的10s内，就不会分发请求到该server上



调整缓存区大小
有时因为http请求和响应的数据量比较大，导致超出nginx默认缓存而返回504这类情况，可以适当调整各类缓冲区大小来满足实际需求：
fastcgi_buffers 8 128k;
client_max_body_size 10m;
client_body_buffer_size 128k;
proxy_buffer_size 4k;
proxy_buffers 32 4k;
proxy_busy_buffers_size 64k;


