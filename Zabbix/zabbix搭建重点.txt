理论：
Zabbix Server会去采集监控数据，采集的监控数据会写入到SQL数据库
Zabbix的WEB后端采用php语言开发，所有配置信息、用户认证信息等会写入SQL数据库
企业级Zabbix的搭建依赖的环境：主流采用LNMP环境(Centos7+Nginx+Mysql+Php)

LNMP web环境下用户的请求流程
用户 -> Nginx -> php-fpm -> 运行php程序 -> 操作mysql

一,安装nginx
LNMP之Nginx服务器编译安装
yum install -y wget gcc gcc-c++ make pcre pcre-devel zlib zlib-devel openssl openssl-devel lrzsz 

cd /usr/local/src
wget 'http://nginx.org/download/nginx-1.14.2.tar.gz'
tar -zxvf nginx-1.14.2.tar.gz
cd nginx-1.14.2
./configure --prefix=/usr/local/nginx
make && make install


手动启动和关闭Nginx
环境变量：export PATH=$PATH:/usr/local/nginx/sbin/
检查Nginx配置： nginx -t
启动Nginx：nginx
关闭Nginx：nginx -s stop


验证Nginx安装是否成功
查看进程
查看监控端口
nginx日志
浏览器访问


使用systemctl管理Nginx，/usr/lib/systemd/system/nginx.service
[Unit]
Description=nginx
After=network.target
[Service]
Type=forking
ExecStart=/usr/local/nginx/sbin/nginx
[Install]
WantedBy=multi-user.target


二,安装php
Php官网
http://php.net/

yum -y install epel-release
yum -y install  gcc gcc-c++ make pcre pcre-devel zlib zlib-devel openssl openssl-devel libxml2 libxml2-devel libcurl libcurl-devel libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel openldap openldap-devel libmcrypt libmcrypt-devel

cd /usr/local/src/
wget 'http://hk1.php.net/distributions/php-5.6.40.tar.gz'
tar -zxf php-5.6.40.tar.gz
cd php-5.6.40
cp -frp /usr/lib64/libldap* /usr/lib/  ##否则有可能报错Cannot find ldap libraries in /usr/lib.
./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc --enable-ctype --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir=/usr --enable-xml --disable-rpath --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --with-curl --enable-mbregex --enable-mbstring --with-mcrypt --with-gd --enable-gd-native-ttf --with-openssl --with-mhash --enable-pcntl --enable-sockets --with-ldap-sasl --with-xmlrpc --enable-zip --enable-soap --with-gettext --enable-fpm --with-ldap

make && make install
cp php.ini-production /usr/local/php/etc/php.ini

#必须做
yum -y install openldap openldap-devel
cp -frp /usr/lib64/libldap* /usr/lib/
vim /usr/local/php/etc/php.ini     # 编辑php.ini
 # 找到 ;extension=php_ldap.dll 的行 把注销去掉 
vim Makefile 找到 EXTRA_LIBS 行（带有很多参数的行），在行末添加 ‘ -llber ‘ 保存退出再次make即可   大致在103行

环境变量：export PATH=$PATH:/usr/local/php/sbin/:/usr/local/php/bin/
检查配置文件：php-fpm -t
使用默认配置文件：mv /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf
查看php-fpm的listen配置

验证php-fpm的启动


使用systemctl管理php-fpm，/usr/lib/systemd/system/php-fpm.service
[Unit]
Description=php-fpm
After=network.target
[Service]
Type=forking
ExecStart=/usr/local/php/sbin/php-fpm
[Install]
WantedBy=multi-user.target



启动php-fpm
systemctl start php-fpm


nginx的默认配置无法处理php程序/usr/local/nginx/html/test.php
<?php
  echo "taobao zabbix";
?>


nginx+php-fpm结合的配置
location / {
            root   html;
            index  index.html index.htm index.php;
        }
location ~ \.php$ {
 root           html;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }

		
		

三,安装Mysql
1.	主流的sql数据库
2.	官网：https://www.mysql.com/

1. 卸载MariaDB
先查看一下系统上的mariadb
#rpm -qa | grep mariadb
mariadb-libs-5.5.56-2.el7.x86_64
然后卸载
#rpm -e --nodeps mariadb-libs-5.5.56-2.el7.x86_64
{MariaDB数据库管理系统是MySQL的一个分支，主要由开源社区在维护，采用GPL授权许可。开发这个分支的原因之一是：甲骨文公司收购了MySQL后，有将MySQL闭源的潜在风险，因此社区采用分支的方式来避开这个风险。MariaDB的目的是完全兼容MySQL，包括API和命令行，使之能轻松成为MySQL的代替品}


Mysql编译安装脚本
yum install -y gcc gcc-c++ make tar openssl openssl-devel cmake ncurses ncurses-devel

useradd -s /sbin/nologin mysql

cd /usr/local/src
wget 'https://cdn.mysql.com//Downloads/MySQL-5.6/mysql-5.6.39.tar.gz'

tar -zxvf mysql-5.6.39.tar.gz
cd mysql-5.6.39
cmake -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_DATADIR=/data/mysql -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_EXTRA_CHARSETS:STRING=all -DWITH_DEBUG=0 -DWITH_SSL=yes -DWITH_READLINE=1 -DENABLED_LOCAL_INFILE=1

make && make install
cp support-files/mysql.server /etc/init.d/mysqld
chmod a+x /etc/init.d/mysqld

mysql环境变量配置
export PATH=$PATH:/usr/local/mysql/bin/

更新mysql配置/etc/my.cnf
[mysqld]
bind-address=0.0.0.0
port=3306
datadir=/data/mysql
user=mysql
skip-name-resolve
long_query_time=2
slow_query_log_file=/data/mysql/mysql-slow.log
expire_logs_days=2
innodb-file-per-table=1
innodb_flush_log_at_trx_commit = 2
log_warnings = 1
max_allowed_packet      = 512M
connect_timeout = 60
net_read_timeout = 120

[mysqld_safe]
log-error=/data/mysql/mysqld.log
pid-file=/data/mysql/mysqld.pid




mysql数据库初始化
mkdir -pv /data/mysql
chown -R mysql:mysql  /usr/local/mysql /data/mysql/

yum install -y perl-Module-Install

/usr/local/mysql/scripts/mysql_install_db --basedir=/usr/local/mysql --user=mysql  --datadir=/data/mysql/



使用systemctl管理mysqld，/usr/lib/systemd/system/mysqld.service
[Unit]
Description=mysqld
After=network.target
[Service]
Type=forking
ExecStart=/etc/init.d/mysqld start
[Install]
WantedBy=multi-user.target


启动mysql服务器
systemctl start mysqld


mysql的安全方式
mysql能限制ip访问、访问需要用户名密码、mysql权限还能再细分
默认让127.0.0.1访问，用户名root，不需要密码
mysql -uroot -h 127.0.0.1 -A

mysql加密码
mysqladmin -h 127.0.0.1 -u root password 'zabbixpwd'
mysql -h 127.0.0.1 -uroot -pzabbixpwd -A


mysql授权某ip登录
GRANT ALL PRIVILEGES ON *.* TO 'root'@'192.168.237.%' IDENTIFIED BY 'zabbixpwd' WITH GRANT OPTION;
flush privileges;


网络登录mysql
mysql -h 192.168.237.49 -uroot -pzabbixpwd -A


{{
安装mysql5.7
https://blog.51cto.com/13719714/2110941

实验所需的软件包：Mysql-5.7.17和boost_1_59_0    
链接：https://pan.baidu.com/s/12O5G4f6AyaajlYU0hJnZwQ 
提取码：9vuh 

yum -y install ncurses ncurses-devel bison cmake gcc gcc-c++
useradd -s /sbin/nologin mysql (创建运行用户，为了加强数据库服务的权限控制，创建专门的运行用户，如mysql .此用户不能直接登录到系统，也不可以创建宿主文件夹)

解压mysql 源码包，释放到/opt/ 目录下。mysql 数据库需要boost 这个库，将 boost 源码包解压到 /usr/local/ 目录下。
tar xf mysql-5.7.17.tar.gz -C /opt/
tar xf boost_1_59_0.tar.gz -C /usr/local/

cd /opt/mysql-5.7.17/
cmake \
   -DCMAKE_INSTALL_PREFIX=/usr/local/mysql \
   -DMYSQL_UNIX_ADDR=/usr/local/mysql/mysql.sock \
   -DSYSCONFDIR=/etc \
   -DSYSTEMD_PID_DIR=/usr/local/mysql \
   -DDEFAULT_CHARSET=utf8 \
   -DDEFAULT_COLLATION=utf8_general_ci \
   -DWITH_INNOBASE_STORAGE_ENGINE=1 \
   -DWITH_ARCHIVE_STORAGE_ENGINE=1 \
   -DWITH_BLACKHOLE_STORAGE_ENGINE=1 \
   -DWITH_PERFSCHEMA_STORAGE_ENGINE=1 \
   -DMYSQL_DATADIR=/usr/local/mysql/data \
   -DWITH_BOOST=/usr/local/boost_1_59_0/ \
   -DWITH_SYSTEWD=1
##注意：如果在CMAKE的过程中有报错，当报错解决后，需要把源码目录中的CMakeCache.txt文件删除，然后再重新CMAKE，否则错误依旧--

#查看服务器cpu数
[root@localhost mysql-5.7.17]# grep processor /proc/cpuinfo | wc -l
2

make -j 2
make install

chown -R mysql.mysql /usr/local/mysql/
cp /usr/local/mysql/support-files/my-default.cnf /etc/my.cnf

修改配置文件  vim /etc/my.cnf   添加以下内容
cat /etc/my.cnf 
[client]
port = 3306
default-character-set = utf8
socket = /usr/local/mysql/mysql.sock

[mysql]
port = 3306
default-character-set = utf8
socket = /usr/local/mysql/mysql.sock

[mysqld]
user = mysql
basedir = /usr/local/mysql
datadir = /usr/local/mysql/data
port = 3306
character_set_server = utf8
pid.file = /usr/local/mysql/mysqld.pid
socket = /usr/local/mysql/mysql.sock
server.id = 1

sql_mode = NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_AUTO_VALUE_ON_ZERO,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,PIPES_AS_CONCAT,ANSI_QUOTES


chown mysql:mysql /etc/my.cnf

设置环境变量
echo 'PATH=/usr/local/mysql/bin:/usr/local/mysql/lib:$PATH' >>/etc/profile
echo 'export PATH' >>/etc/profile 
source /etc/profile 


初始化数据库
cd /usr/local/mysql

bin/mysqld \
--initialize-insecure \
--user=mysql \
--basedir=/usr/local/mysql \
--datadir=/usr/local/mysql/data
##注：初始化最后一行是root用户密码(root@localhost: ,5j1Qj_LLAek)



cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld
chmod +x /etc/init.d/mysqld
ln -s /usr/local/mysql/bin/* /usr/local/bin/
chkconfig --add mysqld


启动服务
service mysqld start


给root 账户设置密码为 abc123 提示输入的是原始密码
mysqladmin -u root -p password "abc123"

}}


验证lnmp没有问题：
LNMP架构
用户 -> php文件
请求到达nginx，nginx通过127.0.0.1:9000去调用php-fpm
php-fpm -> 运行php程序
php -> 操作mysql


LNMP的环境验收，/usr/local/nginx/html/test_mysql.php
<?php
  $link=mysql_connect("127.0.0.1","root","zabbixpwd"); 
  if(!$link){
    echo "mysql_connect fail";
  }else{
    echo "mysql_connect success";
  }
?>

验证LNMP环境
http://192.168.237.49/test_mysql.php



四,部署zabbix
zabbix的部署原理
zabbix server需要把监控数据入sql数据库，所以得Mysql环境
zabbix的web是基于php开发的，所以得LNMP环境
部署zabbix server和zabbix web

zabbix的官网
https://www.zabbix.com/

Zabbix Server编译安装
yum install -y libevent-devel wget tar gcc gcc-c++ make net-snmp-devel libxml2-devel libcurl-devel 
useradd -s /sbin/nologin zabbix

cd /usr/local/src/
wget 'https://nchc.dl.sourceforge.net/project/zabbix/ZABBIX%20Latest%20Stable/4.0.3/zabbix-4.0.3.tar.gz'

tar -zxvf zabbix-4.0.3.tar.gz
cd zabbix-4.0.3
./configure --prefix=/usr/local/zabbix --enable-server --enable-agent --with-mysql=/usr/local/mysql/bin/mysql_config --with-net-snmp --with-libcurl --with-libxml2

make && make install


zabbix server的安装验证
环境变量设置：export PATH=$PATH:/usr/local/zabbix/sbin/:/usr/local/zabbix/bin/
查看版本：zabbix_server --version

zabbix server的启动
需要到mysql里做数据库初始化
配置zabbix server，最主要是配置连接mysql的用户名和密码
启动zabbix server


Mysql数据库初始化mysql -h 127.0.0.1 -uroot -pzabbixpwd -A
create database zabbix character set utf8 collate utf8_bin;
grant all privileges on zabbix.* to zabbix@'127.0.0.1' identified by 'zabbixpwd';

flush privileges;
set names utf8;
use zabbix;
source /usr/local/src/zabbix-4.0.3/database/mysql/schema.sql;
source /usr/local/src/zabbix-4.0.3/database/mysql/data.sql;
source /usr/local/src/zabbix-4.0.3/database/mysql/images.sql;



zabbix server的配置/usr/local/zabbix/etc/zabbix_server.conf
LogFile=/usr/local/zabbix/zabbix_server.log
DBHost=127.0.0.1
DBName=zabbix
DBUser=zabbix
DBPassword=zabbixpwd
DBPort=3306
Timeout=30
AlertScriptsPath=/usr/local/zabbix/alertscripts
ExternalScripts=/usr/local/zabbix/externalscripts
LogSlowQueries=3000

启动zabbix server
chown zabbix:zabbix -R /usr/local/zabbix/
zabbix_server
常遇到的问题
https://blog.51cto.com/3381847248/2053840



Zabbix Web的安装
mkdir /usr/local/nginx/html/zabbix
cp -a /usr/local/src/zabbix-4.0.3/frontends/php/* /usr/local/nginx/html/zabbix/

访问zabbix web，需要做一些初始化配置
http://192.168.237.49/zabbix/



zabbix web需要php做配置优化
vi /usr/local/php/etc/php.ini
post_max_size = 32M
max_execution_time = 350
max_input_time = 350
date.timezone = Asia/Shanghai
always_populate_raw_post_data = -1

systemctl restart php-fpm


登录zabbix
默认用户名和密码：Admin  zabbix
禁用Zabbix server主机的监控


禁用guest用户
更改Admin的密码，改成自己的密码




zabbix网页默认使用英文
如果英文熟悉的话建议直接用英文
把Admin用户改成中文的


zabbix默认的字段问题
中文会有部分乱码的情况
监测 -> 图形里的监控图形会有乱码的产生


解决zabbix部分乱码
下载微软雅黑字体https://raw.githubusercontent.com/chenqing/ng-mini/master/font/msyh.ttf或者C:\Windows\Fonts
zabbix字体的放置目录：/usr/local/nginx/html/zabbix/fonts/
上传微软雅黑字体
zabbix网页的字体配置修改/usr/local/nginx/html/zabbix/include/defines.inc.php


默认是DejaVuSans字体，改成msyh微软雅黑字体
验证中文是否正常





可以将guest给停用掉


配置自动发现：
配置--->自动发现--->创建发现规则

配置-->动作--->右上角事件源选择自动发现--->创建动作例如连接到默认模板











