java进程CPU飙高：
因为这段时间一直在弄监控，但是工作还是在进行中
因为机器不多，所以今天早上巡检了一下，看到一台生产机器上的CPU飙高

top

然后就请出了大神工具JVM
具体JVM的介绍看：http://www.cnblogs.com/smail-bao/p/6027756.html
CPU飙高的话，我们就是用jstack的工具
首先我们使用top查出来是哪个进程导致的CPU飙高
这里我们看到是PID号为11506的进程
这个进程对应的项目是哪个（为了后面可以把错误的定位发给相关的开发人员看），使用ps -aux | grep PID
但是我们怎么具体定位到具体的线程或者代码呢？

首先显示线程列表:
ps -mp pid -o THREAD,tid,time


从这里我们可以找到耗用最高的线程11508，占用CPU时间也有一分多钟了
然后这里我们再将线程的TID转换成十六进制，采用下面的这个方法

printf "%x\n" tid

从这里我们可以看到线程所对应的十六进制是2cf4

最后打印线程的堆栈信息：
jstack PID | grep TID -A100


然后我们把这段内容发给对应的开发，他就可以定位他的问题了


最后，总结下排查CPU故障的方法和技巧有哪些：
1、top命令：Linux命令。可以查看实时的CPU使用情况。也可以查看最近一段时间的CPU使用情况。
2、PS命令：Linux命令。强大的进程状态监控命令。可以查看进程以及进程中线程的当前CPU使用情况。属于当前状态的采样数据。
3、jstack：Java提供的命令。可以查看某个进程的当前线程栈运行情况。根据这个命令的输出可以定位某个进程的所有线程的当前运行状态、运行代码，以及是否死锁等等
4、pstack：Linux命令。可以查看某个进程的当前线程栈运行情况。
